{"version":3,"sources":["App.js","index.js"],"names":["valueContext","createContext","isNextContext","winnerContext","stepContext","size","squareWidth","Wrapper","styled","div","Player","Main","RecordListWrapper","props","isNext","RecordList","RecordListHead","player","EachRecord","BoardOuter","BoardWrapper","FakeSqaure","Square","isLastColumn","isLastRow","BoardColumn","NumberRowForEach","isLast","NumberColumnForEach","BlackPiece","WhitePiece","Result","PlayAgainBtn","directionSet","NumberRow","row","NumberColumn","n","String","fromCharCode","PrintSquare","i","useContext","value","setValue","setIsNext","winner","steps","isWinInSingleDirection","squares","direction","originY","originX","count","isEnd","y","x","newY","newX","handleClickSquare","slice","current","length","calculateWinner","white","push","black","onClick","BoardRow","rows","Math","random","Board","Record","reverseSteps","JSON","stringify","parse","reverse","map","step","index","position","coordinateX","coordinateY","target","startIndex","handleClickStepBtn","App","useRef","useState","over","result","setResult","arr1","arr2","j","useEffect","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26903f4e.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect, useRef, useContext, createContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst valueContext = createContext();\nconst isNextContext = createContext();\nconst winnerContext = createContext();\nconst stepContext = createContext();\nconst size = 19;\nconst squareWidth = 30;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  margin: 0;\n  padding: 30px;\n`;\n\nconst Player = styled.div`\n  text-align: center;\n  font-size: 36px;\n  color: #6f3c0f;\n  margin-bottom: 14px;\n`;\n\nconst Main = styled.div`\n  width: 900px;\n  height: ${(size - 1) * squareWidth + (size - 2) + 60}px;\n  display: flex;\n  justify-content: center:\n  align-items: flex-start;\n  margin: 0 auto;\n`;\n\nconst RecordListWrapper = styled.div`\n  width: 100px;\n  height: 100%;\n  border: 1px solid black;\n  margin-right: 30px;\n\n  ${(props) =>\n    props.isNext &&\n    `\n      border: 3px solid yellow;\n    `}\n`;\n\nconst RecordList = styled.div`\n  width: 100px;\n  height: calc(100% - 55px);\n  background: #e8e8e8;\n  overflow-y: scroll;\n`;\n\nconst RecordListHead = styled.div`\n  width: 100%;\n  height: 30px;\n  padding: 12px 0;\n  font-size: 16px;\n  text-align: center;\n  border-bottom: 1px solid black;\n\n  ${(props) =>\n    props.player === \"black\"\n      ? `\n      background: black;\n      color: white;\n    `\n      : `\n      background: white;\n      color: black;\n    `}\n`;\n\nconst EachRecord = styled.div`\n  width: 100%;\n  border-bottom: 1px dotted grey;\n  background: #fbf6e1;\n  padding: 8px 16px;\n  cursor: pointer;\n`;\n\nconst BoardOuter = styled.div`\n  width: ${(size - 1) * squareWidth + (size - 2)}px;\n  height: ${(size - 1) * squareWidth + (size - 2)}px;\n  background: #ab825e;\n  border: 1.5px solid black;\n  padding: 30px;\n`;\n\nconst BoardWrapper = styled.div`\n  width: ${(size - 1) * squareWidth + (size - 2)}px;\n  height: ${(size - 1) * squareWidth + (size - 2)}px;\n  box-sizing: border-box;\n  position: relative;\n`;\n\nconst FakeSqaure = styled.div`\n  position: relative;\n  width: ${squareWidth}px;\n  height: ${squareWidth}px;\n  border: 1px solid black;\n  background: #transparent;\n  margin-left: -1px;\n`;\n\nconst Square = styled.div`\n  position: absolute;\n  width: ${squareWidth * 0.8}px;\n  height: ${squareWidth * 0.8}px;\n  border-radius: 50%;\n  z-index: 1;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  background: transparent;\n\n  ${(props) =>\n    props.isLastColumn\n      ? props.isLastRow\n        ? `\n        bottom: 0;\n        right: 0;\n        transform: translate(50%, 50%);\n      `\n        : `\n        top: 0;\n        right: 0;\n        transform: translate(50%, -50%);\n    `\n      : props.isLastRow\n      ? `\n        bottom: 0;\n        left: 0;\n        transform: translate(-50%, 50%);\n      `\n      : `\n        top: 0;\n        left: 0;\n        transform: translate(-50%, -50%);\n    `}\n`;\n\nconst BoardColumn = styled.div`\n  display: flex;\n  margin-top: -1px;\n`;\n\nconst NumberRowForEach = styled.div`\n  position: absolute;\n  width: 16px;\n  height: 30px;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  left: -30px;\n  font-size: 14px;\n  transform-origin: center left;\n\n  ${(props) =>\n    props.isLast\n      ? `\n      transform: translate(0, 50%);\n    `\n      : `\n      transform: translate(0, -50%);\n    `}\n`;\n\nconst NumberColumnForEach = styled.div`\n  position: absolute;\n  width: 30px;\n  height: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  top: -30px;\n  font-size: 14px;\n\n  ${(props) =>\n    props.isLast\n      ? `\n      transform: translate(50%, 0);\n    `\n      : `\n      transform: translate(-50%, 0);\n    `}\n`;\n\nconst BlackPiece = styled.div`\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  background: black;\n  box-shadow: 1.8px 2.4px 5px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst WhitePiece = styled.div`\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  background: white;\n  box-shadow: 1.8px 2.4px 3px 0 rgba(0, 0, 0, 0.3);\n`;\n\nconst Result = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.6);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 42px;\n  color: #d6ca72;\n  z-index: 2;\n`;\n\nconst PlayAgainBtn = styled.div`\n  width: 100px;\n  height: 50px;\n  background: #b5adad;\n  border: 1px solid black;\n  border-radius: 8px;\n  font-size: 18px;\n  color: black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst directionSet = [\n  [\n    [1, 0],\n    [-1, 0],\n  ],\n  [\n    [1, 1],\n    [-1, -1],\n  ],\n  [\n    [0, 1],\n    [0, -1],\n  ],\n  [\n    [-1, 1],\n    [1, -1],\n  ],\n];\n\nfunction NumberRow({ row, isLast }) {\n  return (\n    <NumberRowForEach isLast={isLast}>\n      <div>{row + 1}</div>\n    </NumberRowForEach>\n  );\n}\n\nNumberColumn.propTypes = {\n  n: PropTypes.number,\n  isLast: PropTypes.bool,\n};\n\nfunction NumberColumn({ n, isLast }) {\n  return (\n    <NumberColumnForEach isLast={isLast}>\n      <div>{String.fromCharCode(n + 65)}</div>\n    </NumberColumnForEach>\n  );\n}\n\nNumberColumn.propTypes = {\n  n: PropTypes.number,\n  isLast: PropTypes.bool,\n};\n\nfunction PrintSquare({ row, i, isLastColumn, isLastRow }) {\n  const [value, setValue] = useContext(valueContext);\n  const [isNext, setIsNext] = useContext(isNextContext);\n  const winner = useContext(winnerContext);\n  const steps = useContext(stepContext);\n\n  function isWinInSingleDirection(squares, [originY, originX], direction) {\n    let count = 1;\n    for (let i = 0; i < 2; i++) {\n      let isEnd = false;\n      let y = originY;\n      let x = originX;\n      // 往同一個方向找到底，直到找不到連續的再換另一個方向\n      while (isEnd === false) {\n        const newY = y + direction[i][0];\n        const newX = x + direction[i][1];\n        if (newX < 0 || newX >= size || newY < 0 || newY >= size) {\n          break;\n        }\n\n        if (squares[newY][newX] === squares[y][x]) {\n          count++;\n          y = newY;\n          x = newX;\n          continue;\n        }\n        isEnd = true;\n      }\n    }\n    if (count >= 5) return true;\n    return false;\n  }\n\n  function calculateWinner(squares, [y, x]) {\n    for (let i = 0; i < directionSet.length; i++) {\n      // 判斷四組方向中是否有任一方向符合獲勝條件\n      const isWin = isWinInSingleDirection(squares, [y, x], directionSet[i]);\n      if (!isWin) {\n        continue;\n      }\n      return squares[y][x];\n    }\n    return \"\";\n  }\n\n  const handleClickSquare = ([y, x]) => {\n    if (value.squares[y][x] !== null) return; // 不能選已經被下過的格子\n\n    let squares = value.squares.slice();\n    squares[y][x] = isNext ? \"White\" : \"Black\";\n    winner.current = calculateWinner(squares, [y, x]);\n    setValue({ squares });\n\n    if (isNext) {\n      steps.current[steps.current.length - 1].white = [y, x];\n    } else {\n      steps.current.push({ black: [y, x], white: \"\" });\n    }\n    setIsNext(!isNext);\n  };\n\n  return (\n    <Square\n      onClick={() => handleClickSquare([row, i])}\n      isLastColumn={isLastColumn}\n      isLastRow={isLastRow}\n    >\n      {value.squares[row][i] === \"Black\" && <BlackPiece />}\n      {value.squares[row][i] === \"White\" && <WhitePiece />}\n    </Square>\n  );\n}\n\nPrintSquare.propTypes = {\n  row: PropTypes.number,\n  i: PropTypes.number,\n  isLastColumn: PropTypes.bool,\n  isLastRow: PropTypes.bool,\n};\n\nfunction BoardRow({ row }) {\n  let rows = [];\n  for (let i = 0; i < size - 1; i++) {\n    rows[i] = (\n      <FakeSqaure key={Math.random()}>\n        {row === 0 && (\n          <div>\n            <NumberColumn n={i} isLast={false} />\n            {i === size - 2 && <NumberColumn n={i + 1} isLast={true} />}\n          </div>\n        )}\n        <PrintSquare\n          key={Math.random()}\n          row={row}\n          i={i}\n          isLastColumn={false}\n          isLastRow={false}\n        />\n        {i === size - 2 && (\n          <PrintSquare\n            key={Math.random()}\n            row={row}\n            i={i + 1}\n            isLastColumn={true}\n            isLastRow={false}\n          />\n        )}\n        {row === size - 2 && (\n          <div>\n            <PrintSquare\n              key={Math.random()}\n              row={row + 1}\n              i={i}\n              isLastColumn={false}\n              isLastRow={true}\n            />\n            {i === size - 2 && (\n              <PrintSquare\n                key={Math.random()}\n                row={row + 1}\n                i={i + 1}\n                isLastColumn={true}\n                isLastRow={true}\n              />\n            )}\n          </div>\n        )}\n      </FakeSqaure>\n    );\n  }\n\n  return (\n    <BoardColumn>\n      <NumberRow row={row} isLast={false} />\n      {row === size - 2 && <NumberRow row={row + 1} isLast={true} />}\n      {rows}\n    </BoardColumn>\n  );\n}\n\nBoardRow.propTypes = {\n  row: PropTypes.number,\n};\n\nfunction Board() {\n  let rows = [];\n  for (let i = 0; i < size - 1; i++) {\n    rows[i] = <BoardRow key={Math.random()} row={i} />;\n  }\n  return rows;\n}\n\nfunction Record({ player }) {\n  const [value, setValue] = useContext(valueContext);\n  // eslint-disable-next-line\n  const [isNext, setIsNext] = useContext(isNextContext);\n  const steps = useContext(stepContext);\n  let reverseSteps = JSON.stringify(steps);\n  reverseSteps = JSON.parse(reverseSteps).current.reverse();\n\n  function handleClickStepBtn(player, index) {\n    let squares = value.squares.slice();\n    let target;\n    let startIndex = player === \"black\" ? index : index + 1;\n\n    if (player === \"white\") {\n      target = steps.current[index];\n      squares[target.white[0]][target.white[1]] = null;\n      steps.current[index].white = \"\";\n    }\n\n    for (let i = startIndex; i < steps.current.length; i++) {\n      target = steps.current[i];\n      squares[target.black[0]][target.black[1]] = null;\n      if (target.white) {\n        squares[target.white[0]][target.white[1]] = null;\n      }\n      setValue({ squares });\n    }\n    steps.current = steps.current.slice(0, startIndex);\n    player === \"black\" ? setIsNext(false) : setIsNext(true);\n  }\n\n  return (\n    <RecordList>\n      {reverseSteps.map((step, index) => {\n        const position = player === \"black\" ? step.black : step.white;\n        if (!position) return \"\";\n        const coordinateX = String.fromCharCode(position[1] + 65);\n        const coordinateY = position[0] + 1;\n        const n = reverseSteps.length - index - 1;\n        return (\n          <EachRecord\n            key={Math.random()}\n            onClick={() => handleClickStepBtn(player, n)}\n          >\n            <span>{reverseSteps.length - index}</span>.{\" \"}\n            {coordinateX + coordinateY}\n          </EachRecord>\n        );\n      })}\n    </RecordList>\n  );\n}\n\nRecord.propTypes = {\n  player: PropTypes.string,\n};\n\nfunction App() {\n  const winner = useRef(\"\");\n  const steps = useRef([]);\n  const [isNext, setIsNext] = useState(false);\n  const [result, setResult] = useState({ over: false, winner: \"\" });\n  const [value, setValue] = useState(() => {\n    let arr1 = [];\n    for (let i = 0; i < size; i++) {\n      let arr2 = [];\n      for (let j = 0; j < size; j++) {\n        arr2.push(null);\n      }\n      arr1.push(arr2);\n    }\n    return { squares: arr1 };\n  });\n\n  useEffect(() => {\n    if (winner.current !== \"\") {\n      setResult({ over: true, winner: winner.current });\n    }\n  }, [value]);\n\n  function handleClickPlayAgain() {\n    setIsNext(false);\n    setValue(() => {\n      let arr1 = [];\n      for (let i = 0; i < size; i++) {\n        let arr2 = [];\n        for (let j = 0; j < size; j++) {\n          arr2.push(null);\n        }\n        arr1.push(arr2);\n      }\n      return { squares: arr1 };\n    });\n    winner.current = \"\";\n    steps.current = [];\n    setResult({ over: false, winner: \"\" });\n  }\n\n  return (\n    <isNextContext.Provider value={[isNext, setIsNext]}>\n      <valueContext.Provider value={[value, setValue]}>\n        <winnerContext.Provider value={winner}>\n          <stepContext.Provider value={steps}>\n            {result.over && (\n              <Result>\n                <h1>{result.winner} Wins! </h1>\n                <PlayAgainBtn onClick={handleClickPlayAgain}>\n                  Play Again\n                </PlayAgainBtn>\n              </Result>\n            )}\n            <Wrapper>\n              <Player>Next Player: {isNext ? \"White\" : \"Black\"}</Player>\n              <Main>\n                <RecordListWrapper>\n                  <RecordListHead player={\"black\"}>Black</RecordListHead>\n                  <Record player={\"black\"} />\n                </RecordListWrapper>\n                <RecordListWrapper>\n                  <RecordListHead player={\"white\"}>White</RecordListHead>\n                  <Record player={\"white\"} />\n                </RecordListWrapper>\n                <BoardOuter>\n                  <BoardWrapper>\n                    <Board />\n                  </BoardWrapper>\n                </BoardOuter>\n              </Main>\n            </Wrapper>\n          </stepContext.Provider>\n        </winnerContext.Provider>\n      </valueContext.Provider>\n    </isNextContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}